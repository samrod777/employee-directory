{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sam/Desktop/BOOTCAMP/homework/19homework/employee-directory/src/components/DirContainer.js\";\nimport React from \"react\";\nimport API from \"../utils/API\";\nimport Col from \"./Col\";\nimport Row from \"./Row\";\nimport Container from \"./Container\";\nimport Search from \"./Search\";\nimport Table from \"./Table\";\nimport Employee from \"./Employees\";\n\nclass DirContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      result: [],\n      sortedList: []\n    };\n\n    this.searchEmployees = query => {\n      API.search(query).then(res => this.setState({\n        result: res.data.results,\n        sortedList: res.data.results\n      })).catch(err => console.log(err));\n    };\n\n    this.colOrder = () => {\n      if (this.state.sort === \"\" || this.state.sort === \"asc\") {\n        let sorted = this.state.sortedList.sort((a, b) => {\n          if (a.name.last < b.name.last) return -1;else if (a.name.last > b.name.last) return 1;\n          return 0;\n        });\n        this.setState({\n          sortedList: sorted,\n          sort: \"desc\"\n        });\n      } else {\n        let sorted = this.state.sortedList.sort((a, b) => {\n          if (a.name.last > b.name.last) return -1;else if (a.name.last < b.name.last) return 1;\n          return 0;\n        });\n        this.setState({\n          sortedList: sorted,\n          sort: \"asc\"\n        });\n      }\n    };\n\n    this.handleInputChange = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      const sortedList = this.state.result.filter(item => {\n        let names = Object.values(item).join(\"\");\n        return names.indexOf(value) !== -1;\n      });\n      this.setState({\n        [name]: value,\n        sortedList: sortedList\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.searchEmployees(\"?results=100\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          size: \"md-12\",\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            value: this.state.search,\n            handleInputChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          size: \"md-12\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            colOrder: this.colOrder,\n            children: this.state.sortedList.map(item => /*#__PURE__*/_jsxDEV(Employee, {\n              image: item.picture.medium,\n              name: item.name.first,\n              last: item.name.last,\n              phone: item.phone,\n              ID: item.id.value\n            }, item.login.uuid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 34\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DirContainer;","map":{"version":3,"sources":["/Users/sam/Desktop/BOOTCAMP/homework/19homework/employee-directory/src/components/DirContainer.js"],"names":["React","API","Col","Row","Container","Search","Table","Employee","DirContainer","Component","state","search","result","sortedList","searchEmployees","query","then","res","setState","data","results","catch","err","console","log","colOrder","sort","sorted","a","b","name","last","handleInputChange","e","target","value","filter","item","names","Object","values","join","indexOf","componentDidMount","render","map","picture","medium","first","phone","id","login","uuid"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport API from \"../utils/API\";\nimport Col from \"./Col\";\nimport Row from \"./Row\";\nimport Container from \"./Container\";\nimport Search from \"./Search\";\nimport Table from \"./Table\";\nimport Employee from \"./Employees\";\n\nclass DirContainer extends React.Component {\n    state = {\n        search: \"\",\n        result: [],\n        \n        sortedList: [],\n        \n    };\n\n    componentDidMount() {\n        this.searchEmployees(\"?results=100\");\n    }\n\n    searchEmployees = query => {\n        API.search(query)\n            .then(res => this.setState({ \n                result: res.data.results,\n                sortedList: res.data.results }))\n            .catch(err => console.log(err));\n    };\n\n    colOrder = () => {\n        if (this.state.sort === \"\" || this.state.sort === \"asc\") {\n            let sorted = this.state.sortedList.sort((a,b) => {\n                if (a.name.last < b.name.last) return -1;\n                else if (a.name.last > b.name.last) return 1;\n                return 0;\n            });\n            this.setState({ sortedList: sorted, sort: \"desc\" });\n        } else {\n            let sorted = this.state.sortedList.sort((a,b) => {\n                if (a.name.last > b.name.last) return -1;\n                else if (a.name.last < b.name.last) return 1;\n                return 0;\n            });\n            this.setState({ sortedList: sorted, sort: \"asc\" });\n        }\n    };\n\n    handleInputChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        const sortedList = this.state.result.filter(\n            item => {\n                let names = Object.values(item).join(\"\");\n                return names.indexOf(value) !== -1;\n            }\n        );\n        this.setState({\n            [name]: value,\n            sortedList: sortedList\n        })\n    };\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col size=\"md-12\">\n                        <Search \n                            value={this.state.search}\n                            handleInputChange={this.handleInputChange} \n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"md-12\">\n                        <Table colOrder={this.colOrder}>\n                            {this.state.sortedList.map(item =>                             \n                                 <Employee\n                                 key={item.login.uuid}\n                                 image={item.picture.medium}\n                                 name={item.name.first}\n                                 last={item.name.last}\n                                 phone={item.phone}\n                                 ID={item.id.value}\n                             />\n                            )}\n                        </Table>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default DirContainer;"]},"metadata":{},"sourceType":"module"}